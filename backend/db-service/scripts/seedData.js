require('dotenv').config();
const { sequelize, testConnection } = require('../config/database');
const { Analysis } = require('../models');

// Donn√©es de d√©monstration d'analyses (ce que le service IA vous enverrait)
const demoAnalyses = [
  {
    documentName: 'Rapport_Financier_Q4_2023.pdf',
    documentId: 'ext_doc_001',
    summary: "Rapport financier d√©taill√© du quatri√®me trimestre 2023 montrant une croissance de 15% du chiffre d'affaires et une am√©lioration significative de la marge op√©rationnelle. Les investissements R&D ont √©t√© augment√©s pour pr√©parer l'avenir.",
    keyPoints: [
      "Chiffre d'affaires en hausse de 15% par rapport √† Q4 2022",
      "Marge op√©rationnelle am√©lior√©e de 3,2 points",
      "R√©duction des co√ªts op√©rationnels de 8%",
      "Investissements R&D augment√©s de 20%"
    ],
    actionItems: [
      {
        id: '1',
        title: 'Optimiser la strat√©gie commerciale',
        description: 'Capitaliser sur la croissance pour √©tendre la part de march√©',
        priority: 'high',
        category: 'Strat√©gie'
      },
      {
        id: '2',
        title: 'Analyser ROI des investissements R&D',
        description: '√âvaluer l\'impact des investissements suppl√©mentaires en R&D',
        priority: 'medium',
        category: 'Finance'
      }
    ],
    confidence: 94,
    processingTime: 3.8,
    modelUsed: 'gpt-4-turbo',
    tokensUsed: 1250,
    category: 'Financier',
    tags: ['Q4', 'finance', 'croissance', 'R&D']
  },
  {
    documentName: 'Contrat_Partenariat_TechCorp.pdf', 
    documentId: 'ext_doc_002',
    summary: "Contrat de partenariat strat√©gique avec TechCorp d√©finissant les modalit√©s de collaboration technologique et les conditions financi√®res sur 3 ans. Investissement initial de 2,5M‚Ç¨ avec partage des revenus 60/40.",
    keyPoints: [
      "Dur√©e du contrat: 3 ans renouvelable",
      "Investissement initial: 2,5M‚Ç¨",
      "Partage des revenus: 60/40",
      "Clause d'exclusivit√© territoriale Europe de l'Ouest",
      "Collaboration technologique d√©finie en annexe"
    ],
    actionItems: [
      {
        id: '1',
        title: 'Validation juridique',
        description: 'Faire r√©viser les clauses par le d√©partement juridique',
        priority: 'high',
        category: 'Juridique'
      },
      {
        id: '2',
        title: 'Planification financi√®re',
        description: 'Budg√©ter l\'investissement initial de 2,5M‚Ç¨',
        priority: 'high',
        category: 'Finance'
      }
    ],
    confidence: 88,
    processingTime: 5.2,
    modelUsed: 'gpt-4',
    tokensUsed: 980,
    category: 'Juridique',
    tags: ['contrat', 'partenariat', 'TechCorp', '3ans']
  },
  {
    documentName: 'Apocal_Enonc√©_Etudiants.pdf',
    documentId: 'ext_doc_003', 
    summary: "√ânonc√© du projet Apocalipsi - Assistant intelligent de synth√®se de documents. POC √† d√©velopper en 4 jours avec m√©thodologie Scrum, utilisant Node.js, React et int√©gration API LLM. Gestion d'incidents quotidiens simul√©s.",
    keyPoints: [
      "POC assistant intelligent de synth√®se de documents",
      "M√©thodologie Scrum sur 4 jours",
      "Stack technique: Node.js, React, API LLM",
      "Gestion de 2 incidents quotidiens simul√©s",
      "Usage d'outils de g√©n√©ration de code IA",
      "Livraison d'un prototype fonctionnel"
    ],
    actionItems: [
      {
        id: '1',
        title: 'D√©finir l\'architecture technique',
        description: 'Valider les choix technologiques avec l\'√©quipe',
        priority: 'high',
        category: 'Architecture'
      },
      {
        id: '2',
        title: 'Organiser les sprints',
        description: 'Planifier les 4 jours de d√©veloppement en sprints',
        priority: 'high',
        category: 'Gestion projet'
      },
      {
        id: '3',
        title: 'Configurer les outils IA',
        description: 'Int√©grer Cursor, GitHub Copilot, Bolt, etc.',
        priority: 'medium',
        category: 'Outils'
      }
    ],
    confidence: 95,
    processingTime: 4.2,
    modelUsed: 'gpt-4-turbo',
    tokensUsed: 1580,
    category: 'Projet',
    tags: ['POC', 'Scrum', '4jours', 'IA', 'Node.js', 'React']
  }
];

// Fonction pour cr√©er les donn√©es de d√©mo
const seedDemoData = async () => {
  try {
    console.log('üå± Initialisation des donn√©es de d√©monstration...\n');
    console.log('üìã Type: Analyses JSON uniquement (pas de documents)');

    // Vider la table analyses
    await Analysis.destroy({ where: {} });
    console.log('üóëÔ∏è  Table analyses vid√©e');

    // Cr√©er les analyses de d√©mo
    for (const [index, analysisData] of demoAnalyses.entries()) {
      const analysis = await Analysis.create(analysisData);
      console.log(`üîç Analyse ${index + 1} cr√©√©e: "${analysis.documentName}" (ID: ${analysis.id})`);
    }

    console.log('\n‚úÖ Donn√©es de d√©monstration cr√©√©es avec succ√®s !');
    console.log('\nüìä R√©sum√©:');
    console.log(`   ‚Ä¢ ${demoAnalyses.length} analyses cr√©√©es`);
    console.log('   ‚Ä¢ Cat√©gories: Financier, Juridique, Projet');
    console.log('   ‚Ä¢ Confiance moyenne: 92%');
    
    console.log('\nüöÄ Vous pouvez maintenant tester l\'API !');
    console.log('\nüìã Tests recommand√©s:');
    console.log('   ‚Ä¢ GET http://localhost:3000/api/analyses');
    console.log('   ‚Ä¢ GET http://localhost:3000/api/analyses/stats');
    console.log('   ‚Ä¢ GET http://localhost:3000/api/analyses/search?q=POC');
    console.log('   ‚Ä¢ GET http://localhost:3000/api/analyses?category=Financier');
    
  } catch (error) {
    console.error('\n‚ùå Erreur lors de la cr√©ation des donn√©es de d√©mo:', error.message);
    console.error('Stack trace:', error.stack);
  }
};

// Fonction pour afficher les donn√©es existantes
const showExistingData = async () => {
  try {
    await testConnection();
    
    const analysisCount = await Analysis.count();
    console.log('\nüìä Donn√©es existantes:');
    console.log(`   ‚Ä¢ Analyses: ${analysisCount}`);
    
    if (analysisCount > 0) {
      // Statistiques par cat√©gorie
      const byCategory = await Analysis.findAll({
        attributes: [
          'category',
          [require('sequelize').fn('COUNT', require('sequelize').col('id')), 'count'],
          [require('sequelize').fn('AVG', require('sequelize').col('confidence')), 'avgConfidence']
        ],
        group: ['category'],
        raw: true
      });
      
      console.log('\nüìà Par cat√©gorie:');
      byCategory.forEach(stat => {
        const avgConf = Math.round(stat.avgConfidence || 0);
        console.log(`   ‚Ä¢ ${stat.category || 'Autres'}: ${stat.count} analyses (confiance moy: ${avgConf}%)`);
      });
      
      // Derni√®res analyses
      const recent = await Analysis.findAll({
        attributes: ['id', 'documentName', 'confidence', 'category', 'createdAt'],
        limit: 5,
        order: [['createdAt', 'DESC']]
      });
      
      console.log('\nüìã Derni√®res analyses:');
      recent.forEach(analysis => {
        console.log(`   ‚Ä¢ ${analysis.documentName} (${analysis.category}) - ${analysis.confidence}%`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
  }
};

// Fonction principale
const run = async () => {
  try {
    await testConnection();
    
    const args = process.argv.slice(2);
    
    if (args.includes('--show') || args.includes('-s')) {
      await showExistingData();
    } else if (args.includes('--help') || args.includes('-h')) {
      console.log(`
üìñ Script de donn√©es de d√©monstration (Analyses seulement)

Usage:
  node scripts/seedData.js [options]

Options:
  --show, -s    Afficher les donn√©es existantes
  --help, -h    Afficher cette aide

Sans option: Cr√©er les donn√©es de d√©monstration

Donn√©es cr√©√©es:
  ‚Ä¢ 3 analyses de d√©monstration
  ‚Ä¢ Cat√©gories: Financier, Juridique, Projet  
  ‚Ä¢ Format: JSON complet avec r√©sum√©, points cl√©s, actions
      `);
    } else {
      await seedDemoData();
    }
    
  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
    process.exit(1);
  } finally {
    await sequelize.close();
  }
};

// Ex√©cuter si appel√© directement
if (require.main === module) {
  run();
}

module.exports = {
  seedDemoData,
  demoAnalyses
};